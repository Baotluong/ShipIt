@model ShipIt.ViewModels.BetsDetailViewModel
    
@{
    ViewBag.Title = @Model.BetPremise;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.ErrorMessage != null)
{
    <div class="alert alert-info" style="margin-top:13px;">@Model.ErrorMessage</div>
}

<div class="bet-premise-title">@Model.BetPremise</div>
<div class="well well-sm">
    <div class="details-label">Status:</div>
    @if (Model.UserBetStatusMessage == "NotUsersBet")
    {
        <div class="details-information">@Model.BetStatus</div>
    }
    else
    {
        <div class="details-information">@Model.UserBetStatusMessage</div>
    }

    @if (Model.BetWinner != null)
    {
        <div class="details-label">Winner:</div>
        <div class="details-information">@Model.BetWinner</div>
    }
    else if (Model.ProposedBetWinner != null)
    {
        <div class="details-label">Proposed Winner:</div>
        <div class="details-information">@Model.ProposedBetWinner</div>
    }

    <div class="details-label"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>1</div>
    <div class="details-information">@Model.User1</div>
    <div class="details-label"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>1 Wins If</div>
    <div class="details-information">@Model.User1Condition</div>
    <div class="details-label"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>2</div>
    <div class="details-information">@Model.User2</div>
    <div class="details-label"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>2 Wins If</div>
    <div class="details-information">@Model.User2Condition</div>
    <div class="details-label">Wager:</div>
    <div class="details-information">@Model.BetWager</div>
    <div class="details-label">Date Created:</div>
    <div class="details-information">@Model.StartDate.ToShortDateString()</div>

    @if (Model.EndDate != null)
    {
        <div class="details-label">End Date:</div>
        <div class="details-information">@Model.EndDate</div>
    }
</div>
<div class="available-actions">
    @switch (Model.UserBetStatus)
    {
        case "CanAcceptBet":
            <button class="btn btn-primary confirm" id="can-accept-bet" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Accept Bet</button>
            <button class="btn btn-warning danger" id="can-delete-bet" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Delete Bet</button>
            break;

        case "WaitingForAcceptBet":
            <button class="btn btn-warning danger" id="can-delete-bet" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Delete Bet</button>
            break;

        case "CanProposeWinner":
            <button class="btn btn-primary confirm" id="can-propose-winner-1" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">@Model.User1 Won</button>
            <button class="btn btn-primary confirm" id="can-propose-winner-2" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">@Model.User2 Won</button>
            break;

        case "WaitingForAcceptWinner":
            break;

        case "CanAcceptWinner":
            if (Model.ProposedBetWinner == Model.User1)
            {
                <button class="btn btn-success confirm" id="can-accept-winner" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Yes, @Model.ProposedBetWinner Won</button>
                <button class="btn btn-danger confirm" id="can-propose-winner-2" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">No, @Model.User2 Won</button>
            }
            else
            {
                <button class="btn btn-success confirm" id="can-accept-winner" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Yes, @Model.ProposedBetWinner Won</button>
                <button class="btn btn-danger confirm" id="can-propose-winner-1" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">No, @Model.User1 Won</button>
            }
            break;

        case "NeedsToSettle":
            break;

        case "CanAcceptPaid":
            <button class="btn btn-primary confirm" id="can-accept-paid" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Updating Bet...">Bet has been Settled</button>
            break;

        case "Resolved":
            <input type="button" class="btn btn-primary" value="Make New Bet" onclick="location.href='@Url.Action("New", "Bets")'" />
            break;

        default:
            break;
    }
</div>


@section scripts
{
    <script>
        $(document).ready(function () {
            $(".available-actions").on("click", ".confirm", function () {
                var button = $(this);
                var id = button.attr('id');

                bootbox.confirm({
                    title: "Are you sure?",
                    message: "Do you want to proceed? This cannot be undone.",
                    buttons: {
                        cancel: {
                            label: '<i class="fa fa-times"></i> Cancel'
                        },
                        confirm: {
                            label: '<i class="fa fa-check"></i> Confirm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $(".confirm").button("loading");
                            switch (id) {
                                case "can-delete-bet":
                                    window.location.href = '@Url.Action("Delete", "Bets", new { id = Model.BetId })';
                                    break;

                                case "can-accept-bet":
                                    window.location.href = '@Url.Action("AcceptBet", "Bets", new { betId = Model.BetId })';
                                    break;

                                case "can-propose-winner-1":
                                    window.location.href = '@Html.Raw(Url.Action("ProposeWinner", "Bets", new { proposedBetWinner = Model.User1, betId = @Model.BetId }, null))';
                                    break;

                                case "can-propose-winner-2":
                                    window.location.href = '@Html.Raw(Url.Action("ProposeWinner", "Bets", new { proposedBetWinner = Model.User2, betId = @Model.BetId }, null))';
                                    break;

                                case "can-accept-winner":
                                    window.location.href = '@Url.Action("AcceptWinner", "Bets", new { betId = Model.BetId })';
                                    break;

                                case "can-accept-paid":
                                    window.location.href = '@Url.Action("AcceptPaid", "Bets", new { betId = Model.BetId })';
                                    break;

                                case "make-new-bet":
                                    window.location.href = '@Url.Action("New", "Bets")';
                                    break;

                                default:
                                    window.location.href = '@Url.Action("BetsIndex", "Bets")';
                                    break;
                                }

                            }
                        }
                    });
                });
            });
    </script>
}

